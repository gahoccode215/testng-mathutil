<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="10" passed="10" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-13T13:31:53Z" name="Surefire suite" finished-at="2024-06-13T13:31:53Z" duration-ms="22">
    <groups>
    </groups>
    <test started-at="2024-06-13T13:31:53Z" name="Surefire test" finished-at="2024-06-13T13:31:53Z" duration-ms="22">
      <class name="com.gahoccode.core.test.FibonacciCaculateTest">
        <test-method signature="testGetFibonacciGivenWrongArg_1ThrowsException()[pri:0, instance:com.gahoccode.core.test.FibonacciCaculateTest@60438a68]" started-at="2024-06-13T20:31:53Z" name="testGetFibonacciGivenWrongArg_1ThrowsException" finished-at="2024-06-13T20:31:53Z" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid n. n must be larger than 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid n. n must be larger than 0
	at com.gahoccode.core.FibonacciCaculate.getFibonacci(FibonacciCaculate.java:17)
	at com.gahoccode.core.test.FibonacciCaculateTest.testGetFibonacciGivenWrongArg_1ThrowsException(FibonacciCaculateTest.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFibonacciGivenWrongArg_1ThrowsException -->
      </class> <!-- com.gahoccode.core.test.FibonacciCaculateTest -->
      <class name="com.gahoccode.core.test.FibonacciCaculateDDTTest">
        <test-method signature="testGetFibonacciGivenRightArgumentReturnWell(int, long)[pri:0, instance:com.gahoccode.core.test.FibonacciCaculateDDTTest@2a40cd94]" started-at="2024-06-13T20:31:53Z" name="testGetFibonacciGivenRightArgumentReturnWell" data-provider="source" finished-at="2024-06-13T20:31:53Z" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFibonacciGivenRightArgumentReturnWell -->
        <test-method signature="testGetFibonacciGivenRightArgumentReturnWell(int, long)[pri:0, instance:com.gahoccode.core.test.FibonacciCaculateDDTTest@2a40cd94]" started-at="2024-06-13T20:31:53Z" name="testGetFibonacciGivenRightArgumentReturnWell" data-provider="source" finished-at="2024-06-13T20:31:53Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFibonacciGivenRightArgumentReturnWell -->
        <test-method signature="testGetFibonacciGivenRightArgumentReturnWell(int, long)[pri:0, instance:com.gahoccode.core.test.FibonacciCaculateDDTTest@2a40cd94]" started-at="2024-06-13T20:31:53Z" name="testGetFibonacciGivenRightArgumentReturnWell" data-provider="source" finished-at="2024-06-13T20:31:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFibonacciGivenRightArgumentReturnWell -->
        <test-method signature="testGetFibonacciGivenRightArgumentReturnWell(int, long)[pri:0, instance:com.gahoccode.core.test.FibonacciCaculateDDTTest@2a40cd94]" started-at="2024-06-13T20:31:53Z" name="testGetFibonacciGivenRightArgumentReturnWell" data-provider="source" finished-at="2024-06-13T20:31:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFibonacciGivenRightArgumentReturnWell -->
        <test-method signature="testGetFibonacciGivenRightArgumentReturnWell(int, long)[pri:0, instance:com.gahoccode.core.test.FibonacciCaculateDDTTest@2a40cd94]" started-at="2024-06-13T20:31:53Z" name="testGetFibonacciGivenRightArgumentReturnWell" data-provider="source" finished-at="2024-06-13T20:31:53Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFibonacciGivenRightArgumentReturnWell -->
        <test-method signature="testGetFibonacciGivenRightArgumentReturnWell(int, long)[pri:0, instance:com.gahoccode.core.test.FibonacciCaculateDDTTest@2a40cd94]" started-at="2024-06-13T20:31:53Z" name="testGetFibonacciGivenRightArgumentReturnWell" data-provider="source" finished-at="2024-06-13T20:31:53Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFibonacciGivenRightArgumentReturnWell -->
        <test-method signature="testGetFibonacciGivenRightArgumentReturnWell(int, long)[pri:0, instance:com.gahoccode.core.test.FibonacciCaculateDDTTest@2a40cd94]" started-at="2024-06-13T20:31:53Z" name="testGetFibonacciGivenRightArgumentReturnWell" data-provider="source" finished-at="2024-06-13T20:31:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFibonacciGivenRightArgumentReturnWell -->
        <test-method signature="testGetFibonacciGivenRightArgumentReturnWell(int, long)[pri:0, instance:com.gahoccode.core.test.FibonacciCaculateDDTTest@2a40cd94]" started-at="2024-06-13T20:31:53Z" name="testGetFibonacciGivenRightArgumentReturnWell" data-provider="source" finished-at="2024-06-13T20:31:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFibonacciGivenRightArgumentReturnWell -->
        <test-method signature="testGetFibonacciGivenRightArgumentReturnWell(int, long)[pri:0, instance:com.gahoccode.core.test.FibonacciCaculateDDTTest@2a40cd94]" started-at="2024-06-13T20:31:53Z" name="testGetFibonacciGivenRightArgumentReturnWell" data-provider="source" finished-at="2024-06-13T20:31:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFibonacciGivenRightArgumentReturnWell -->
      </class> <!-- com.gahoccode.core.test.FibonacciCaculateDDTTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
